% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sidanet.R
\name{sidanettunerange}
\alias{sidanettunerange}
\title{Tuning paramter grid values for sidanet}
\usage{
sidanettunerange(
  Xdata = Xdata,
  Y = Y,
  ngrid = 8,
  standardize = TRUE,
  weight = 0.5,
  eta = 0.5,
  myedges = myedges,
  myedgeweight = myedgeweight,
  withCov = FALSE
)
}
\arguments{
\item{Xdata}{A list with each entry containing training views of size \eqn{n \times p_d},
where \eqn{d = 1, \dots, D}. Rows are samples and columns are variables. If covariates
are available, they should be included as a separate view, and set as the last dataset.
For binary or categorical covariates (assumes no ordering), we suggest the use of
indicator variables.}

\item{Y}{\eqn{n \times 1} vector of class membership. Numeric, coded as 1, 2, ....}

\item{ngrid}{Number of grid points for tuning parameters.}

\item{standardize}{TRUE or FALSE. If TRUE, data will be normalized to have mean
zero and variance one for each variable. Default is TRUE.}

\item{weight}{Balances separation and association. Default is 0.5.}

\item{eta}{Balances the selection of network, and variables within network.
Default is 0.5.}

\item{myedges}{A list with each entry containing a \eqn{M_d \times 2}
matrix of edge information for each view. If a view has no edge information,
set to 0; this will default to SIDA. If covariates are available as a view
(\eqn{D}th view), the edge information should be set to 0.}

\item{myedgeweight}{A list with each entry containing a \eqn{M_d \times 1}
vector of weight information for each view. If a view has no weight information,
set to 0; this will use the Laplacian of an unweighted graph. If covariates
are available as a view (\eqn{D}th view), the weight information should be set to 0.}

\item{withCov}{TRUE or FALSE if covariates are available. If TRUE, please set all
covariates as one dataset and should be the last dataset. For binary and categorical
variables, use indicator matrices/vectors. Default is FALSE.}
}
\value{
\item{Tauvec}{Grid values for each data, not including covariates, if available.}
}
\description{
Sidanet function to provide tuning parameter grid values for each
view, not including covariates, if available. It is recommended to use this to
get lower and upper bounds of tuning parameters for each view that can be used
in sidanet. This function is called by cvSIDANet to select optimal tuning parameters.
}
\details{
The function will return several R objects, which can be assigned to a variable.
To see the results, use the â€œ$" operator.
}
\examples{
\dontrun{
##---- read in data
data(sidanetData)

##---- call sidanet algorithm to estimate discriminant vectors, and predict on testing data
#call sidanettunerange to get range of tuning paramater
Xdata=sidanetData[[1]]
Y=sidanetData[[2]]
Xtestdata=sidanetData[[3]]
Ytest=sidanetData[[4]]
myedges=sidanetData[[5]]
myedgeweight=sidanetData[[6]]

ngrid=10
mytunerange=sidanettunerange(Xdata,Y,ngrid,standardize=TRUE,weight=0.5,eta=0.5,
                             myedges,myedgeweight)

# an example with Tau set as the lower bound
Tau=c(mytunerange$Tauvec[[1]][1], mytunerange$Tauvec[[2]][1])

#example with two views having edge weights
mysidanet=sidanet(Xdata,Y,myedges,myedgeweight,Tau,Xtestdata=Xtestdata,Ytest=Ytest)

test.error=mysidanet$sidaneterror
test.correlation=mysidanet$sidanetcorrelation
hatalpha=mysidanet$hatalpha
predictedClass=mysidanet$PredictedClass
}
}
\references{
Sandra E. Safo, Eun Jeong Min, and Lillian Haine (2022), Sparse Linear Discriminant
Analysis for Multi-view Structured Data, Biometrics.
}
\seealso{
\code{\link{sidanet}}
}
